HOW TO VERIFY TITLE OF ANY WEB PAGE IN SELENIUM WEBDRIVER?
public class PageTitle {

	public static void main(String[] args) {
	
	
		System.setProperty("webdriver.chrome.driver","C:/Selenium Chrome Driver/chromedriver.exe");
		ChromeDriver driver= new ChromeDriver();
        driver.get("http://newtours.demoaut.com/") ;    
        driver.manage().window().maximize();
        
// step1= use getTitle()and store the value in string 
          String actualTitle = driver.getTitle();
//  step2 = declare expectedtitle is string 
        String expectedTitle = "Welcome: Mercury Tours";
 // Method1  If condition comapring expected and actual 
        if (actualTitle.equalsIgnoreCase(expectedTitle))
        System.out.println("pgTitle is matched");
        else
        System.out.println("pgTitle didnt matched")
        
//        Method 2 with assert command
//        Assert.assertEquals("Condition true", actualTitle, expectedTitle);
******************************************************************************************************************************        
2.HOW TO SEND TEXTS WITHOUT USING SENDKEYS() METHOD IN SELENIUM WEBDRIVER?

This technique is the alternative way to sendKeys(). If you are trying to send texts using JavascriptExecutor then I can figure out 
there could be the reasons for doing this act, which is as follows:
First reason That text is element might be locked or disabled
sendKeys() sends texts in a sequence of characters and that may take bit longer time if you have to send a huge number of characters, 
let’s say 5000 characters. So in that case, it will be time taking. Therefore, you can use JavaScript technique to send entire 5000 characters 
all at once to the text box.
  /Method1      public static void main(String[] args) {
	    System.setProperty("webdriver.chrome.driver","C:/Selenium Chrome Driver/chromedriver.exe");
		ChromeDriver driver= new ChromeDriver();
		driver.get("https://login.salesforce.com/");
		driver.manage().window().maximize();
		driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		JavascriptExecutor js = new JavascriptExecutor();
		js.executeScript("document.getElementByID('username').value='insightQ';")

/method 2 WebElement ele = driver.findElement(By.id("username"));
	      js.executeScript("arguments[0].value='InsightQ';",ele);
	     
In general javaScript Executor will be preffered where webdriver unable to identify  webelemnt in a page.
JavascriptExecutor is a interface class which is provided in webdriver.Using JavascriptExecuto we can able to click on webelements
enter data highlight a specific webelement,scroll downpage etc.
*************************************************************************************************************************************************
isEnbaled() for signIN() ********same for isDisabled ()  and isSelect()***********************
        System.setProperty("webdriver.chrome.driver","C:/Selenium Chrome Driver/chromedriver.exe");
		ChromeDriver driver= new ChromeDriver();
		driver.get("https://facebook.com/");
		driver.manage().window().maximize();
		driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		***findElement and return as a WebElement Object
	    WebElement sObj =  driver.findElement (By.id('xxxxx');
	    System.out.println("name of the attribute value":+sObj.getAttribute('name');
	    System.out.println("name of the visible text":+sObj.getText());
	    if(sObj.isEnabled())
	    {
	    System.out.pritnln("singIn is enabled");
	    }
	    else
	    system.out.println("SignIn is not enabled");
**********************************************************************************************************************************************	    
Mutliple Windows handles

We first store id of the window by using command, driver.getWindowHandle() or driver.getWindowHandles(). These two command gives unique id(s) 
 of the window then we finally use driver.switchTo().window(driver.getWindowHandle()) command to switch to the particular window.
 
 The return type of getWindowHandle() is string
 
 HOW TO STORE THE REFERENCE TO MULTIPLE CHILD WINDOWS?
Tip:

Let me tell you little about TreeSet. This is a part of Java Collection framework. TreeSet stores unique elements in an ascending order 
and their retrieval time is very fast.

Here to store multiple child windows, we use TreeSet in String so that reference to each window will get unique storage. 
Hence, its initialization would be like-

set<String>childWindow = driver.getWindowHandles();

Handle the windows in 2 approaches 
1) for each loop 
2)while loop with iterator 
Here Iterator traverses over entire String and creates a reference to each index of the String. hashNext () used here to check whether there is any next object or not. If there is any object then next() 
just jump to the upcoming object and returns the output.

System.setProperty("webdriver.chrome.driver","C:/Selenium Chrome Driver/chromedriver.exe");
		WebDriver driver = new ChromeDriver();
		
        driver.get("http://www.inviul.com/getwindowhandle-window-switching/");
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
        driver.manage().deleteAllCookies();
        
        JavascriptExecutor js = ((JavascriptExecutor)driver);
        js.executeScript("window.scrollBy(0,1000)");
        
        WebElement wHan = driver.findElement(By.xpath("//a[@class='buttons btn_blue center']"));
        js.executeScript("arguments[0].click();",wHan);
        
        String defaultWindow = driver.getWindowHandle();
        System.out.println("default window name is:"+defaultWindow);
        
        Set<String> childWindows= driver.getWindowHandles();
        Iterator<String>iterator=childWindows.iterator();
        
            while(iterator.hasNext())     {
         	String child= iterator.next();
         	
         	if(!child.equalsIgnoreCase(defaultWindow))
         	{
         		driver.switchTo().window(child);
         		System.out.println("childwindows name is:"+child);
         	}
         	else
         	{
         		System.out.println("There is no childWindows");
         	}
        driver.findElement(By.xpath("//div[@id='search-2']//input[@id='s']")).click();
        Thread.sleep(5000);
    	driver.findElement(By.xpath("//div[@id='search-2']//input[@id='s']")).sendKeys("abc");
    	Thread.sleep(5000);
    	   	   	
        			
        }
            
            driver.switchTo().window(defaultWindow);
            
  ******************************************************************************************************************************************  	
 How to read data from excel
 
 FileInputStream fis = new FileInputStream("c://worbook/path of the file")
 Workbook wb= workbookFactory.create(fis)
 sheet sh =wb.getSheet("employee details")
 String Value =sh.getRow(rownumber).getCell(cellNum).getStringCellValue();
 
	    
	    
  